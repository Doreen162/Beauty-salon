{"version":3,"sources":["reducers/clientsReducer.js","reducers/servicesReducer.js","components/CategoryIcon.js","actions/actionCreators.js","components/Service.js","components/ServicesList.js","components/Client.js","components/ClientTotal.js","components/ClientServices.js","components/ClientList.js","components/PaymentModal.js","components/AddClient.js","components/CompanyTotal.js","components/App.js","serviceWorker.js","index.js"],"names":["initialState","clients","id","Math","floor","random","name","registeredAt","Date","now","billPaid","services","price","category","clientServiceId","isPaymentModalOpen","clientForPayment","clientsReducer","createReducer","ADD_CLIENT","state","action","newClient","payload","clientName","push","REMOVE_CLIENT","_","remove","clientId","MARK_CLIENT_SERVICES_STATUS_AS_PAID","clientIndex","findIndex","client","OPEN_PAYMENT_MODAL","CLOSE_PAYMENT_MODAL","DROP_SERVICE","service","REMOVE_CLIENT_SERVICE","servicesSample","serviceNameFilter","serviceCategoryFilter","servicesResult","servicesReducer","FILTER_SERVICE","nextServiceNameFilter","nextServiceCategoryFilter","filteredServices","filter","toLowerCase","match","isEmpty","CategoryIcon","React","Component","categoryIcon","render","className","style","marginTop","this","props","aria-hidden","serviceSpec","beginDrag","endDrag","monitor","didDrop","getDropResult","actionDropService","Service","connectDragSource","width","dragSource","DragSource","connect","connectDragPreview","dragPreview","isDragging","draggedService","dispatch","actionDragService","type","ServicesList","onCategoryClick","currentServiceNameFilter","actionFilterService","handleInputChange","event","currentServiceCategoryFilter","value","target","placeholder","onChange","onClick","Object","keys","map","key","href","servicesState","Client","trim","format","ClientTotal","total","clientServicesSpec","drop","ClientServices","removeClientService","actionRemoveClientService","removeClient","window","confirm","actionRemoveClient","openPaymentModal","actionOpenPaymentModal","connectDropTarget","clientServices","reduxConnectedClientServices","DropTarget","dropTarget","hovered","isOver","ClientList","Fragment","store","clientsState","PaymentModal","closePaymentModal","actionClosePaymentModal","markClientServicesStatusAsPaid","actionMarkClientServicesStatusAsPaid","aria-label","AddClient","addClient","actionAddClient","input","ref","node","clientInput","length","CompanyTotal","clientsBillPaid","clientsBillNotPaid","totalReceived","forEach","reduce","sum","totalOpen","rootReducer","combineReducers","configureStore","reducer","App","DndProvider","backend","HTML5Backend","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa1276e2.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nconst initialState = {\n  clients: [\n    { id: Math.floor(Math.random() * 100), name: 'Rose', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Women Hair Cut', price: 35, category: 'hair', clientServiceId: Date.now() } } },\n    { id: Math.floor(Math.random() * 100), name: 'John', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Men Hair Cut', price: 26, category: 'hair', clientServiceId: Date.now() }, [Math.floor(Math.random() * 100)]: { name: 'Basic Facial', price: 55, category: 'facial', clientServiceId: Date.now() } } },\n    { id: Math.floor(Math.random() * 100), name: 'Valerie', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Gel Nails', price: 35, category: 'nails', clientServiceId: Date.now() } } },\n  ],\n  isPaymentModalOpen: false,\n  clientForPayment: null\n}\n\n// NOTE: createReducer uses Immer to let you write reducers as if they \n// were mutating the state directly. In reality, the reducer receives \n// a proxy state that translates all mutations into equivalent copy operations.\n\nexport const clientsReducer = createReducer(initialState, {\n  ADD_CLIENT: (state, action) => {\n    const newClient = { id: Date.now(), name: action.payload.clientName, services: [], registeredAt: Date.now(), billPaid: false }\n\n    state.clients.push(newClient)\n  },\n\n  REMOVE_CLIENT: (state, action) => {\n    _.remove(state.clients, { id: action.payload.clientId })\n  },\n\n  MARK_CLIENT_SERVICES_STATUS_AS_PAID: (state, action) => {\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\n    const client = state.clients[clientIndex]\n\n    client.billPaid = true  \n    state.isPaymentModalOpen = false\n  },\n\n  OPEN_PAYMENT_MODAL: (state, action) => {\n    state.isPaymentModalOpen = true\n    state.clientForPayment = { ...action.payload.client }\n  },\n\n  CLOSE_PAYMENT_MODAL: (state) => {\n    state.isPaymentModalOpen = false\n  },\n\n  DROP_SERVICE: (state, action) => {\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\n    const client = state.clients[clientIndex]\n\n    client.services[Math.floor(Math.random() * 100)] = { ...action.payload.service, clientServiceId: Date.now() }\n  },\n\n  REMOVE_CLIENT_SERVICE: (state, action) => {\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\n    const client = state.clients[clientIndex]\n    \n    delete client.services[action.payload.clientServiceId]\n  }\n})\n","import { createReducer } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nconst servicesSample = {\n  [Math.floor(Math.random() * 100)]: { name: 'Deluxe Facial', price: 75, category: 'facial' },\n  [Math.floor(Math.random() * 100)]: { name: 'Basic Facial', price: 55, category: 'facial' },\n  [Math.floor(Math.random() * 100)]: { name: 'Acne Treatment', price: 95, category: 'facial' },\n  [Math.floor(Math.random() * 100)]: { name: 'Milk Peel', price: 330, category: 'facial' },\n\n  [Math.floor(Math.random() * 100)]: { name: 'Women Hair Cut', price: 35, category: 'hair' },\n  [Math.floor(Math.random() * 100)]: { name: 'Children Hair Cut', price: 20, category: 'hair' },\n  [Math.floor(Math.random() * 100)]: { name: 'Permanent Color', price: 68, category: 'hair' },\n  [Math.floor(Math.random() * 100)]: { name: 'Scalp Treatment', price: 35, category: 'hair' },\n  [Math.floor(Math.random() * 100)]: { name: 'Men Hair Cut', price: 26, category: 'hair' },\n\n  [Math.floor(Math.random() * 100)]: { name: 'Gel Nails', price: 35, category: 'nails' },\n  [Math.floor(Math.random() * 100)]: { name: 'Acrylic Nails', price: 45, category: 'nails' },\n  [Math.floor(Math.random() * 100)]: { name: 'Manicure', price: 20, category: 'nails' },\n  [Math.floor(Math.random() * 100)]: { name: 'Pedicure', price: 30, category: 'nails' },\n\n  [Math.floor(Math.random() * 100)]: { name: 'Hair Tincture', price: 20, category: 'products' },\n  [Math.floor(Math.random() * 100)]: { name: 'Hair Tincture PRO', price: 40, category: 'products' },\n  [Math.floor(Math.random() * 100)]: { name: 'Oil Hair Tretament 100ml', price: 25, category: 'products' },\n\n  [Math.floor(Math.random() * 100)]: { name: 'Carolina Herrera Parfum', price: 100, category: 'others' },\n  [Math.floor(Math.random() * 100)]: { name: 'Chocolate', price: 3, category: 'others' },\n  [Math.floor(Math.random() * 100)]: { name: 'Coke', price: 5, category: 'others' }\n}\n\nconst initialState = {\n  services: servicesSample,\n  serviceNameFilter: '',\n  serviceCategoryFilter: '',\n  servicesResult: servicesSample\n}\n\n// NOTE: createReducer uses Immer to let you write reducers as if they \n// were mutating the state directly. In reality, the reducer receives \n// a proxy state that translates all mutations into equivalent copy operations.\n\nexport const servicesReducer = createReducer(initialState, {\n  FILTER_SERVICE: (state, action) => {\n    const nextServiceNameFilter = action.payload.serviceNameFilter || ''\n    const nextServiceCategoryFilter = action.payload.serviceCategoryFilter || ''\n\n    state.serviceNameFilter = nextServiceNameFilter\n    state.serviceCategoryFilter = nextServiceCategoryFilter\n\n    const filteredServices = _.filter(state.services, function (service) { \n      return service.name.toLowerCase().match(nextServiceNameFilter.toLowerCase()) && \n        service.category === (_.isEmpty(nextServiceCategoryFilter) ? service.category : nextServiceCategoryFilter)\n    });\n    \n    state.servicesResult = filteredServices\n  },\n\n})","import React from 'react';\n\nclass CategoryIcon extends React.Component {\n  categoryIcon = (category) => {\n    switch (category) {\n      case 'facial':\n        return 'fa-theater-masks';\n      case 'hair':\n        return 'fa-cut';\n      case 'nails':\n        return 'fa-hand-scissors';\n      case 'products':\n        return 'fa-burn'\n      default:\n        return 'fa-shopping-cart'\n    }\n  }\n\n  render(){\n    return (\n      <span className=\"panel-icon has-text-danger\" style={{ marginTop: '5px' }}>\n        <i className={\"fas \" + this.categoryIcon(this.props.category)} aria-hidden=\"true\"></i>\n      </span>\n    )\n  }\n}\n\nexport default CategoryIcon;\n","export const ADD_CLIENT = 'ADD_CLIENT'\nexport const REMOVE_CLIENT = 'REMOVE_CLIENT'\nexport const ADD_CLIENT_ERROR = 'ADD_CLIENT_ERROR'\nexport const REMOVE_CLIENT_SERVICE = 'REMOVE_CLIENT_SERVICE'\nexport const MARK_CLIENT_SERVICES_STATUS_AS_PAID = 'MARK_CLIENT_SERVICES_STATUS_AS_PAID'\n\nexport const OPEN_PAYMENT_MODAL = 'OPEN_PAYMENT_MODAL'\nexport const CLOSE_PAYMENT_MODAL = 'CLOSE_PAYMENT_MODAL'\n\nexport const DRAG_SERVICE = 'DRAG_SERVICE'\nexport const DROP_SERVICE = 'DROP_SERVICE'\nexport const FILTER_SERVICE = 'FILTER_SERVICE'\n\nexport const actionAddClient = (clientName) => {\n  if (clientName.length > 0) {\n    return { type: ADD_CLIENT, payload: { clientName } }\n  } else {\n    return { type: ADD_CLIENT_ERROR }\n  }\n}\n\nexport const actionRemoveClient = (clientId) => {\n  return { type: REMOVE_CLIENT, payload: { clientId } }\n}\n\nexport const actionRemoveClientService = (clientId, clientServiceId) => {\n  return { type: REMOVE_CLIENT_SERVICE, payload: { clientId, clientServiceId } }\n}\n\nexport const actionMarkClientServicesStatusAsPaid = (clientId) => {\n  return { type: MARK_CLIENT_SERVICES_STATUS_AS_PAID, payload: { clientId } }\n}\n\nexport const actionOpenPaymentModal = (client) => {\n  return { type: OPEN_PAYMENT_MODAL, payload: { client } }\n}\n\nexport const actionClosePaymentModal = () => {\n  return { type: CLOSE_PAYMENT_MODAL }\n}\n\nexport const actionDragService = (service) => {\n  return { type: DRAG_SERVICE, payload: { service } }\n}\n\nexport const actionDropService = (service, clientId) => {\n  return { type: DROP_SERVICE, payload: { service, clientId } }\n}\n\nexport const actionFilterService = (serviceNameFilter, serviceCategoryFilter) => {\n  return { type: FILTER_SERVICE, payload: { serviceNameFilter, serviceCategoryFilter } } }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DragSource } from 'react-dnd';\nimport CategoryIcon from './CategoryIcon';\nimport {\n  actionDragService,\n  actionDropService,\n} from '../actions/actionCreators';\n\nconst serviceSpec = {\n  beginDrag(props) {\n    return props.service;\n  },\n\n  endDrag(props, monitor) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    // monitor.getDropResult() returns an object containing the clientId\n    // so we know for which client this service should be added\n    const { clientId } = monitor.getDropResult();\n\n    props.actionDropService(props.service, clientId);\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nclass Service extends React.Component {\n  render() {\n    const { connectDragSource, service } = this.props;\n\n    return connectDragSource(\n      <div style={{ width: '100%' }}>\n        <CategoryIcon category={service.category} />\n        {service.name} (R{service.price})\n      </div>\n    );\n  }\n}\n\nService.propTypes = {\n  service: PropTypes.shape({\n    name: PropTypes.string,\n    category: PropTypes.string,\n    price: PropTypes.number,\n  }),\n  connectDragSource: PropTypes.instanceOf(Function),\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionDragService: (service) => {\n    dispatch(actionDragService(service));\n  },\n  actionDropService: (service, clientId) => {\n    dispatch(actionDropService(service, clientId));\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  draggedService: state.draggedService,\n});\n\nconst dragSource = DragSource('service', serviceSpec, collect)(Service);\nexport default connect(mapStateToProps, mapDispatchToProps)(dragSource);\n","import React from 'react';\nimport Service from './Service'\nimport { actionFilterService } from '../actions/actionCreators'\nimport { connect } from 'react-redux';\n\nclass ServicesList extends React.Component {\n  onCategoryClick = (category) => {\n    const currentServiceNameFilter = this.props.serviceNameFilter\n\n    this.props.actionFilterService(currentServiceNameFilter, category);\n  }\n\n  handleInputChange = (event) => {\n    const currentServiceCategoryFilter = this.props.serviceCategoryFilter\n    const target = event.target;\n    const value = target.value;\n\n    this.props.actionFilterService(value, currentServiceCategoryFilter);\n  }\n\n  render (){\n    const servicesResult = this.props.servicesResult\n    \n    return (\n      <nav className=\"services-list\">\n        <p className=\"panel-heading\">\n          Services\n        </p>\n        <div className=\"panel-block\">\n          <p className=\"control has-icons-left\">\n            <input className=\"input is-small is-danger\" type=\"text\" placeholder=\"search\" onChange={this.handleInputChange} />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n            </span>\n          </p>\n        </div>\n        <div className=\"panel-tabs\">\n          <div className={`${this.props.serviceCategoryFilter === '' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('')}>all</div>\n          <div className={`${this.props.serviceCategoryFilter === 'facial' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('facial')}>facial</div>\n          <div className={`${this.props.serviceCategoryFilter === 'hair' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('hair')}>hair</div>\n          <div className={`${this.props.serviceCategoryFilter === 'nails' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('nails')}>nails</div>\n          <div className={`${this.props.serviceCategoryFilter === 'products' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('products')}>products</div>\n          <div className={`${this.props.serviceCategoryFilter === 'others' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('others')}>others</div>\n        </div>\n        {\n          Object.keys(servicesResult).map(key => (\n            <div href=\"#\" className=\"panel-block is-active\" key={key}>\n              <Service service={servicesResult[key]} key={servicesResult[key].name} />\n            </div>\n          ))\n        }\n      </nav>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFilterService: (serviceNameFilter, serviceCategoryFilter) => { dispatch(actionFilterService(serviceNameFilter, serviceCategoryFilter)) }\n});\n\nconst mapStateToProps = state => ({\n  servicesResult: state.servicesState.servicesResult,\n  serviceNameFilter: state.servicesState.serviceNameFilter,\n  serviceCategoryFilter: state.servicesState.serviceCategoryFilter\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServicesList);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\n\nclass Client extends React.Component {\n  render () {\n    const client = this.props.client\n\n    return (\n      <div className=\"client\" >\n        <p>\n          <strong>{client.name}</strong> <small>@{client.name.trim().toLowerCase()}</small>\n          <br/>\n          <small>\n            <Moment format=\"H:mm:ss\">{client.registeredAt}</Moment>\n          </small>\n        </p>\n      </div>\n    )\n  }\n}\n\nClient.propTypes = {\n  client: PropTypes.shape({\n    name: PropTypes.string,\n    registeredAt: PropTypes.number\n  })\n}\n\nexport default Client\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ClientTotal extends React.Component {\n  render() {\n    let total = 0;\n    const services = this.props.services;\n\n    Object.keys(services).map((key) => (total = total + services[key].price));\n\n    return (\n      <div>\n        <b>R{total}</b>\n      </div>\n    );\n  }\n}\n\nClientTotal.propTypes = {\n  services: PropTypes.object,\n};\n\nexport default ClientTotal;\n","import React from 'react';\nimport Client from './Client';\nimport Service from './Service';\nimport ClientTotal from './ClientTotal';\nimport { DropTarget } from 'react-dnd';\nimport { connect } from 'react-redux';\n\nimport {\n  actionRemoveClientService,\n  actionRemoveClient,\n  actionOpenPaymentModal,\n} from '../actions/actionCreators';\n\nconst clientServicesSpec = {\n  drop(props) {\n    // Returns the object to be used in endDrag(props, monitor) on Service.js\n    // This object will be available on monitor.getDropResult() inside endDrag(props, monitor)\n    // and will contain the clientId value\n    return props;\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    hovered: monitor.isOver(),\n  };\n}\n\nclass ClientServices extends React.Component {\n  removeClientService = (clientId, clientServiceId) => {\n    this.props.actionRemoveClientService(clientId, clientServiceId);\n  };\n\n  removeClient = (clientId) => {\n    const confirmed = window.confirm('Are you sure?');\n\n    if (confirmed) {\n      this.props.actionRemoveClient(clientId);\n    }\n  };\n\n  openPaymentModal = () => {\n    this.props.actionOpenPaymentModal(this.props.client);\n  };\n\n  render() {\n    const { connectDropTarget } = this.props;\n    const clientServices = this.props.client.services;\n\n    return connectDropTarget(\n      <div className='box'>\n        <article className='media'>\n          <div className='media-content'>\n            <div className='content'>\n              <Client client={this.props.client} />\n              <br />\n              <span className='has-text-weight-bold'>Services:</span>\n              <nav style={{ marginTop: '3px' }}>\n                {Object.keys(clientServices).map((key) => (\n                  <div className='panel-block is-active' key={key}>\n                    <Service service={clientServices[key]} />\n                    <p\n                      className='delete'\n                      onClick={() =>\n                        this.removeClientService(this.props.clientId, key)\n                      }\n                    ></p>\n                  </div>\n                ))}\n              </nav>\n            </div>\n            <nav className='level is-mobile'>\n              <div className='level-left'>\n                <p className='buttons'>\n                  <button\n                    className='button is-danger is-small'\n                    onClick={() => this.removeClient(this.props.clientId)}\n                  >\n                    <span className='icon is-small'>\n                      <i className='fas fa-ban'></i>\n                    </span>\n                    <span>Remove</span>\n                  </button>\n\n                  <button\n                    className='button is-primary is-small'\n                    onClick={() => this.openPaymentModal()}\n                  >\n                    <span className='icon is-small'>\n                      <i className='fas fa-dollar-sign'></i>\n                    </span>\n                    <span>Cashier</span>\n                  </button>\n                </p>\n              </div>\n              <div className='level-right'>\n                <ClientTotal services={this.props.client.services} />\n              </div>\n            </nav>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionRemoveClientService: (clientId, clientServiceId) => {\n    dispatch(actionRemoveClientService(clientId, clientServiceId));\n  },\n  actionRemoveClient: (clientId) => {\n    dispatch(actionRemoveClient(clientId));\n  },\n  actionOpenPaymentModal: (client) => {\n    dispatch(actionOpenPaymentModal(client));\n  },\n});\n\nconst mapStateToProps = (state) => ({});\n\nconst reduxConnectedClientServices = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientServices);\nexport default DropTarget(\n  'service',\n  clientServicesSpec,\n  collect\n)(reduxConnectedClientServices);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClientServices from './ClientServices';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass ClientList extends React.Component {\n  render () {\n    const clients = _.filter(this.props.clients, { billPaid: false })\n\n    return (\n      <React.Fragment>\n        {\n          clients.map(client => (\n            <ClientServices client={client} clientId={client.id} key={client.id} />\n          ))\n        }\n      </React.Fragment>\n\n    )\n  }\n}\n\nClientList.propTypes = {\n  clients: PropTypes.array\n}\n\nconst mapStateToProps = store => ({\n  clients: store.clientsState.clients,\n})\n\nexport default connect(mapStateToProps)(ClientList)\n","import React from 'react'\nimport ClientTotal from './ClientTotal'\nimport { connect } from 'react-redux'\n\nimport { actionClosePaymentModal, actionMarkClientServicesStatusAsPaid } from '../actions/actionCreators'\n\nclass PaymentModal extends React.Component {\n\n  closePaymentModal = () => {\n    this.props.actionClosePaymentModal()\n  }\n\n  markClientServicesStatusAsPaid = (clientId) => {\n    this.props.actionMarkClientServicesStatusAsPaid(clientId)\n  }\n\n  render() {\n    const clientForPayment = this.props.clientForPayment\n    const clientId = clientForPayment && clientForPayment.id\n    const clientServices = clientForPayment ? clientForPayment.services : []\n    const isPaymentModalOpen = this.props.isPaymentModalOpen\n\n    return (\n      isPaymentModalOpen && (\n        <div className=\"modal is-active\">\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">\n                Cashier\n              </p>\n              <button className=\"delete\" aria-label=\"close\" onClick={() => this.closePaymentModal()}></button>\n            </header>\n            <section className=\"modal-card-body\">\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-vertical is-8\">\n                  <div className=\"tile\">\n                    <div className=\"tile is-parent is-vertical\">\n                      <article className=\"tile is-child notification is-dark\">\n                        <p className=\"title is-size-4\">{clientForPayment.name}</p>\n                        <p className=\"subtitle is-size-6\">@{clientForPayment.name.trim().toLowerCase()}</p>\n                      </article>\n                      <article className=\"tile is-child notification \">\n                        <p className=\"title is-size-6\">Services:</p>\n                        <ul>\n                          {\n                            Object.keys(clientServices).map(key => (\n                              <li key={key}>• {clientServices[key].name} (${clientServices[key].price})</li>\n                            ))\n                          }\n                        </ul>\n                      </article>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"tile is-parent\">\n                  <article className=\"tile is-child notification is-danger\">\n                    <div className=\"title is-size-2\">\n                      <ClientTotal services={clientForPayment.services} />\n                    </div>\n                    <p className=\"subtitle is-size-4\">\n                      Total\n                    </p>\n                  </article>\n                </div>\n              </div>\n            </section>\n            <footer className=\"modal-card-foot\">\n              <button className=\"button is-primary\" onClick={() => this.markClientServicesStatusAsPaid(clientId)}>Mark as paid</button>\n              <button className=\"button\" onClick={() => this.closePaymentModal()}>Cancel</button>\n            </footer>\n          </div>\n        </div>\n      )\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionClosePaymentModal: () => { dispatch(actionClosePaymentModal()) },\n  actionMarkClientServicesStatusAsPaid: (clientId) => { dispatch(actionMarkClientServicesStatusAsPaid(clientId))}\n});\n\nconst mapStateToProps = state => ({\n  isPaymentModalOpen: state.clientsState.isPaymentModalOpen,\n  clientForPayment: state.clientsState.clientForPayment\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentModal);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddClient } from '../actions/actionCreators'\n\nclass AddClient extends React.Component {\n  addClient = () => {\n    this.props.actionAddClient(this.input.value.trim());\n    this.input.value = '';\n  }\n\n  render (){\n    return (\n      <div className=\"tile is-ancestor add-client\">\n        <div className=\"tile is-vertical\">\n          <div className=\"tile\">\n            <div className=\"tile is-parent is-vertical\">\n              <article className=\"tile is-child notification is-light is-bold\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input is-danger\" type=\"text\" name=\"client-name\"\n                           placeholder=\"Enter customer's name\"\n                           ref={node => {this.input = node;}}/>\n                  </div>\n                </div>\n                <button className=\"button is-danger\" onClick={this.addClient}>\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-plus\"></i>\n                  </span>\n                  <span>New Customer</span>\n                </button>\n              </article>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionAddClient: (clientName) => { dispatch(actionAddClient(clientName)) }\n});\n\nconst mapStateToProps = state => ({\n  clientInput: state.clientInput\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass CompanyTotal extends React.Component {\n  render() {\n    const clientsBillPaid = _.filter(this.props.clients, { billPaid: true });\n    const clientsBillNotPaid = _.filter(this.props.clients, {\n      billPaid: false,\n    });\n\n    let totalReceived = 0;\n\n    clientsBillPaid.forEach(function (client) {\n      totalReceived += _.reduce(\n        client.services,\n        function (sum, service) {\n          return sum + (service ? service.price : 0);\n        },\n        0\n      );\n    });\n\n    let totalOpen = 0;\n\n    clientsBillNotPaid.forEach(function (client) {\n      totalOpen += _.reduce(\n        client.services,\n        function (sum, service) {\n          return sum + (service ? service.price : 0);\n        },\n        0\n      );\n    });\n\n    return (\n      <div>\n        <nav className='level'>\n          <div className='level-item has-text-centered'>\n            <div>\n              <p className='heading'>Total Open</p>\n              <p className='title has-text-danger'>R{totalOpen}</p>\n            </div>\n          </div>\n          <div className='level-item has-text-centered'>\n            <div>\n              <p className='heading'>Total Received</p>\n              <p className='title has-text-primary'>R{totalReceived}</p>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nCompanyTotal.propTypes = {\n  clients: PropTypes.array,\n};\n\nconst mapStateToProps = (store) => ({\n  clients: store.clientsState.clients,\n});\n\nexport default connect(mapStateToProps)(CompanyTotal);\n","import React, { Component } from 'react';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { clientsReducer } from '../reducers/clientsReducer';\nimport { servicesReducer } from '../reducers/servicesReducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport ServicesList from './ServicesList';\nimport ClientList from './ClientList';\nimport PaymentModal from './PaymentModal';\nimport AddClient from './AddClient';\nimport CompanyTotal from './CompanyTotal';\n\nimport '../css/App.css';\n\nconst rootReducer = combineReducers({\n  clientsState: clientsReducer,\n  servicesState: servicesReducer,\n});\n\nconst store = configureStore({ reducer: rootReducer });\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className='hero is-dark is-bold header-hero'>\n          <div className='hero-body'>\n            <div className='columns'>\n              <div className='column is-four-fifths'>\n                <h1 className='title'>Beauty Salon</h1>\n                <h2 className='subtitle has-text-danger'>\n                  <small>Done by Doreen Ligman</small>\n                </h2>\n              </div>\n              <div className='column is-one-fifth'>\n                <CompanyTotal />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='app-container'>\n          <DndProvider backend={HTML5Backend}>\n            <AddClient />\n            <ClientList />\n            <ServicesList />\n            <PaymentModal />\n          </DndProvider>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}